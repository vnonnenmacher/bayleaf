version: '3.8'

networks:
  k8srede:
    driver: bridge

services:
  django:
    build: .
    container_name: django_app
    restart: always
    env_file: .env
    depends_on:
      - db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media/
      - /run/gunicorn:/run/gunicorn  # Share socket with Nginx
      - /var/log/gunicorn:/var/log  # Mount log directory for persistence
      - /var/log/vesalus:/var/log/vesalus
    expose:
      - "8000"  # Keeping for internal communication with Nginx
    networks:
      - k8srede

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - k8srede

  nginx_proxy:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"  # Exposing port 80 to external IP
      - "443:443" # SSL Port (Fixed port number)
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /run/gunicorn:/run/gunicorn  # Mount Gunicorn socket
      - /etc/letsencrypt:/etc/letsencrypt:ro
      # - ./nginx/ssl/server.crt:/etc/nginx/ssl/certsrv.crt
      # - ./nginx/ssl/server.key:/etc/nginx/ssl/certsrv.key
    depends_on:
      - django
    networks:
      - k8srede  

volumes:
  postgres_data:
  static_volume:
  media_volume:
